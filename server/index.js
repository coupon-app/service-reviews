// ///////////////////////////////////////////////////////////////////////////////////////
// IMPORTS ///////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////////////////////////////////////////////////
const express = require('express');
const morgan = require('morgan');

const db = require('./database'); // TODO: create index.js in /database with connection details

const app = express();
const PORT = process.env.PORT || 3000;

// ///////////////////////////////////////////////////////////////////////////////////////
// MIDDLEWARE ////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////////////////////////////////////////////////

app.use(morgan('dev'));
app.use(express.json());
app.use(express.static('public'));

// ///////////////////////////////////////////////////////////////////////////////////////
// ROUTES ////////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////////////////////////////////////////////////


// TODO: handle pagination for reviews
// i.e.: https://stackoverflow.com/questions/18524125/req-query-and-req-param-in-expressjs
app.get('/api/reviews/:productId', (req, res) => {
  const { productId } = req.params;
  // Create variable to handle pagination options in database query
  const pageOptions = {
    page: parseInt(req.query.page, 10) || 0,
    limit: parseInt(req.query.limit, 10) || 10,
  };

  db.getReviewsForProductId(productId, pageOptions, (err, queryResults) => {
    if (err) console.log('Error occured in database query: getReviewsForProductId.\n', err);
    res.status(200).json(queryResults);
  });
});


// ///////////////////////////////////////////////////////////////////////////////////////
// EXPRESS ///////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////////////////////////////////////////////////

app.listen(PORT, () => {
  console.log(`Server listening on port: ${PORT}`);
});
